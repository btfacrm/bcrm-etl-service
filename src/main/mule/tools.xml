<?xml version="1.0" encoding="UTF-8"?>

<mule
    xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
 	xmlns:db="http://www.mulesoft.org/schema/mule/db"
    xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/http
        http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
		http://www.mulesoft.org/schema/mule/db 
		http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
		http://www.mulesoft.org/schema/mule/tls
		http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd">
	

	<!-- ********************************************* --> 
	<!-- Watermark operations -->
	<!-- ********************************************* --> 

    <sub-flow name="watermark-read">

		<ee:transform doc:name="query watermark" >
			<ee:variables >
				<ee:set-variable variableName="query"><![CDATA[#[ %dw 2.0
					output application/json
					---
                    " SELECT ViewName, Retries, FORMAT(LastExecution, 'yyyy-MM-dd HH:mm:ss.fff') AS LastExecution " ++
                    " FROM Watermark " ++ 
                    " WHERE ViewName = '" ++ vars.view ++ "'"
				]]]>
				</ee:set-variable>
			</ee:variables>
		</ee:transform>

        <flow-ref name="mssql-query"/>

		<set-variable doc:name="set validFrom" variableName="validFrom" value="#[payload[0].LastExecution as String]" />
		<logger level="INFO" category="app" message="#['validFrom: ' ++ vars.validFrom]" />
    </sub-flow>

	<sub-flow name="watermark-update-norecords">

		<ee:transform doc:name="update watermark" >
			<ee:variables >
				<ee:set-variable variableName="query"><![CDATA[#[ %dw 2.0
					output application/json
					---
					" UPDATE Watermark SET " ++ 
					"   LastResponse = '', " ++
					"   LastExecution = :lastExecution, " ++
					"   Retries = 0 " ++
					" WHERE ViewName = '" ++ vars.view ++ "'"
				]]]>
				</ee:set-variable>
			</ee:variables>
		</ee:transform>

        <flow-ref name="mssql-update"/>
		<set-variable doc:name="set statusValidator" variableName="statusValidator" value="200" />
        <flow-ref name="response"/>
    </sub-flow>




	<!-- ********************************************* --> 
	<!-- Sql Server operations                         -->
	<!-- ********************************************* --> 

	<sub-flow name="mssql-query">
        <logger doc:name="sql query" level="INFO" category="app"
            message="#['Select query: ' ++ vars.query]"/>

		<db:select doc:name="sqlserver select" config-ref="Database_Config">
            <db:sql><![CDATA[#[ vars.query ]]]></db:sql>
			<db:input-parameters ><![CDATA[#[{ 
				validFrom: vars.validFrom,
				maxRecords: vars.maxRecords }]]]>
			</db:input-parameters>
		</db:select>
		<set-variable doc:name="set recordsProcessed" variableName="recordsProcessed" value='#[sizeOf(payload)]'  />
		<set-variable doc:name="set lastExecution" variableName="lastExecution" value='#[now() as String {format: "yyyy/MM/dd HH:mm:ss"}]'  />
		<logger doc:name="num records" level="INFO" category="app"
			message="#['Records retrieved from database: ' ++ (vars.recordsProcessed as String) ]"/>
	</sub-flow>

    <sub-flow name="mssql-update">
        <logger doc:name="sql update" level="INFO" category="app"
            message="#['Update sql: ' ++ vars.query]"/>

		<db:update doc:name="sqlserver update" config-ref="Database_Config_Watermark">
            <db:sql><![CDATA[#[ vars.query ]]]></db:sql>
			<db:input-parameters ><![CDATA[#[{ 
				validFrom: vars.validFrom,
				lastErrorResponse: vars.lastErrorResponse,
				lastErrorInputPayload: vars.lastErrorInputPayload,
				lastExecution: vars.lastExecution,
				apiResponse: vars.apiResponse }]]]>
			</db:input-parameters>
		</db:update>

        <!-- <logger level="INFO" category="app" message="#[ if ( payload != null) payload else 'No records found']"/> -->
	</sub-flow>




	<!-- ********************************************* --> 
	<!-- HTTP request utilities                        -->
	<!-- ********************************************* --> 

	<flow name="http-post">
		<logger doc:name="call POST" level="INFO" category="app" 
			message='#[ "Call POST method, path: " ++ vars.servicePath ++ ", statusValidator: " ++ (vars.statusValidator as String) ]' />

		<!-- <logger doc:name="payload" level="INFO" category="app" message="#[payload]"/> -->

		<http:request method="POST" config-ref="HTTP_Request_Configuration" path="#[vars.servicePath]">
			<http:headers><![CDATA[#[output application/java ---
				{
					"Content-Type"  : "application/json",
                    "client_id"     : "${service.clientid}",
                    "client_secret" : "${service.clientsecret}"
				}]]]>
			</http:headers>
			<http:response-validator>
				<http:success-status-code-validator values="#[vars.statusValidator]" />
			</http:response-validator>
		</http:request>
		<logger doc:name="response" level="INFO" message='#[payload]' />
		<logger doc:name="status code" level="INFO" message='#["Http status code: " ++ (attributes.statusCode as String)]' />
		<set-variable doc:name="set httpStatus" variableName="httpStatus" value='#[200]'  />
		<set-variable doc:name="set httpMessage" variableName="httpMessage" value='#[payload]'/>

		<error-handler>
			<on-error-continue enableNotifications="false" logException="false">
				<logger level="INFO" category="app" message="There was an error while calling the service through the POST method" />
				<logger level="INFO" category="app" message="#[error.errorMessage.payload]" />
				<logger level="INFO" category="app" message="#[error.errorMessage]" />
				<set-variable doc:name="set httpStatus" variableName="httpStatus" value='#[error.errorMessage.attributes.statusCode]'  />
				<set-variable doc:name="set httpMessage" variableName="httpMessage" value='#[error.errorMessage.payload]'/>
			</on-error-continue>
		</error-handler>
	</flow>

	<!-- ********************************************* --> 
	<!-- Common flows                                  -->
	<!-- ********************************************* --> 
    
	<sub-flow name="send-api">
        <flow-ref name="http-post"/>

        <choice doc:name="verify http call" >
            <when expression='#[ vars.httpStatus != 200 ]'>
				<!-- There was an error in Salesforce API -->
                <logger level="INFO" category="app" message="#['There was an error in the Salesforce API']" />
				<set-variable doc:name="httpStatus" variableName="httpStatus" value="#['500']"/>
				<set-variable doc:name="set apiResponse" variableName="apiResponse" value='#[write(vars.httpMessage, "application/json")]'  />
				<set-variable doc:name="set lastErrorResponse" variableName="lastErrorResponse" value='#[write(vars.httpMessage, "application/json")]'  />
				<set-variable doc:name="set lastErrorInputPayload" variableName="lastErrorInputPayload" value='#[write(payload, "application/json")]'  />
				<ee:transform doc:name="update watermark" >
					<ee:variables >
						<ee:set-variable variableName="query"><![CDATA[#[ %dw 2.0
							output application/json
							---
							" UPDATE Watermark SET " ++ 
							"   LastResponse = :apiResponse, " ++
							"   lastErrorDate = :lastExecution, " ++
							"   LastErrorResponse = :lastErrorResponse, " ++
							"   lastErrorInputPayload = :lastErrorInputPayload, " ++
							"   Retries = Retries + 1 " ++
							" WHERE ViewName = '" ++ vars.view ++ "'"
						]]]>
						</ee:set-variable>
					</ee:variables>
				</ee:transform>
            </when>
			<otherwise>
				<!-- A successfull call to Salesforce API -->
				<logger level="INFO" category="app" message="#['Success call to Salesforce API']" />
				<set-variable doc:name="httpStatus" variableName="httpStatus" value="#['200']"/>
				<set-variable doc:name="set apiResponse" variableName="apiResponse" value='#[write(payload, "application/json")]'  />
				<ee:transform doc:name="update watermark" >
					<ee:variables >
						<ee:set-variable variableName="query"><![CDATA[#[ %dw 2.0
							output application/json
							---
							" UPDATE Watermark SET " ++ 
							"   LastResponse = :apiResponse, " ++
							"   LastExecution = :lastExecution, " ++
							"   Retries = 0 " ++
							" WHERE ViewName = '" ++ vars.view ++ "'"
						]]]>
						</ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
        </choice>     

        <flow-ref name="mssql-update"/>

        <flow-ref name="response"/>
	</sub-flow>

    <sub-flow name="response">
		<set-variable doc:name="message" variableName="message" value="#['View processed: ' ++ vars.view]"  />
		<set-variable doc:name="service time" variableName="serviceProcessingTime" value="#[(now() as Number {unit: 'milliseconds'}) - vars.start]"  />
        <ee:transform doc:name="response" >
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
					output application/json
					---
					{
						message: vars.message,
						status: vars.httpStatus,
						recordsProcessed: vars.recordsProcessed, 
						serviceProcessingTime: vars.serviceProcessingTime,
						correlationId: correlationId
					}
					]]>
				</ee:set-payload>
			</ee:message>
		</ee:transform>		        
    </sub-flow>

	<sub-flow name="initialize">
		<set-variable doc:name="set httpStatus" variableName="httpStatus" value='#[200]'/>
		<set-variable doc:name="start service" variableName="start" value="#[now() as Number {unit: 'milliseconds'}]" />
	</sub-flow>
</mule>
