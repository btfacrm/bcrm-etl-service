<?xml version="1.0" encoding="UTF-8"?>

<mule
 	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" 
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd	
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/http 
		http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
		http://www.mulesoft.org/schema/mule/vm 
		http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
	
	<flow name="queue-contact">
		<vm:listener doc:name="Listener" config-ref="VM_Config" queueName="vm-contact" timeout="60" timeoutUnit="MINUTES"/>
		<set-variable doc:name="set view to process" variableName="view" value="contact" />
		<set-variable doc:name="set view API endpoint" variableName="servicePath" value="${service.path.contact}" />
		<flow-ref name="initialize-process" doc:name="initialize process"/>

		<!-- Get validFrom Watermark -->
		<flow-ref name="query-watermark-validfrom" doc:name="get watermark data"/>

		<!-- Create query for view -->
		<ee:transform doc:name="sql for view" >
			<ee:variables >
				<ee:set-variable variableName="query"><![CDATA[#[ %dw 2.0
					output application/json skipNullOn="everywhere"
					---
					" SELECT " ++
					"   ContactID, PrimaryLastName, PrimaryFirstName, PrimaryMiddleInitial, ContactName, " ++
					"   PrimaryGender, SSN, SSNFlag, ActiveFlag, DisbursementEligibilityFlag, " ++
					"   FORMAT(DateOfBirth, 'yyyy-MM-dd') AS DateOfBirth, " ++
					"   FORMAT(DateOfDeath, 'yyyy-MM-dd') AS DateOfDeath, " ++
					"   FORMAT(ValidFrom, 'yyyy-MM-ddTHH:mm:ss.fffZ') AS ValidFrom " ++
					" FROM VCrm_ContactMaster  " ++
					" WHERE ValidFrom > :validFrom " ++
					" ORDER BY ValidFrom " ++
					" OFFSET " ++ (vars.offset as String) ++ " ROWS " ++
					" FETCH NEXT " ++ (vars.maxRecords as String) ++ " ROWS ONLY"
				]]]>
				</ee:set-variable>
			</ee:variables>
		</ee:transform>

		<flow-ref name="mssql-query-main" doc:name="query main db"/>

		<choice doc:name="create API payload?" >
            <when expression='#[ vars.recordsProcessed > 0 ]'>
				<ee:transform doc:name="api payload" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
							output application/json
							---
							payload map (item, value) ->{
								contactId: 		 item.ContactID as String,
								(firstNameXX: 	 item.PrimaryFirstName) if (!isEmpty(item.PrimaryFirstName)),
								(lastName: 		 item.PrimaryLastName) if (!isEmpty(item.PrimaryLastName)),
								(middleInitial:  item.PrimaryMiddleInitial) if (!isEmpty(item.PrimaryMiddleInitial)),
								name: 			 item.ContactName,
								(gender: 		 item.PrimaryGender) if (!isEmpty(item.PrimaryGender)),
								(ssn: 			 item.SSN) if (!isEmpty(item.SSN)),
								ssnFlag: 		 !isEmpty(item.SSNFlag) and item.SSNFlag != 0,
								(dob: 			 item.DateOfBirth) if (!isEmpty(item.DateOfBirth)),
								(dod: 			 item.DateOfDeath) if (!isEmpty(item.DateOfDeath)),
								activeFlag: 	 !isEmpty(item.ActiveFlag) and item.ActiveFlag != 0,
								disbursementFlag:!isEmpty(item.DisbursementEligibilityFlag) and item.DisbursementEligibilityFlag != 0,
								date: 			 item.ValidFrom
							}
							]]>
						</ee:set-payload>
					</ee:message>
				</ee:transform>

				<flow-ref name="call-api" doc:name="call api"/>
            </when>
        </choice>

		<!-- Analyze results and post message to the response queue -->
		<flow-ref name="publish-message" doc:name="analyze and route message"/>

        <error-handler ref="global-error-handler" />
	</flow>
</mule>
