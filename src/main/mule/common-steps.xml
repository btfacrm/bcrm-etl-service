<mule
    xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core 	http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/os 		http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	
    <sub-flow name="save-status-step1" doc:name="save batch status 1">
		<os:store doc:name="Store" objectStore="Object_store" key="#[vars.view]">
			<os:value><![CDATA[#[
				output application/json
				---
				{
 					step: 1,
					stepDescription: "Sending first message to batch",
					currentBatchMetadata: vars.queueMessage
				}
				]]]>
			</os:value>
		</os:store>	
    </sub-flow>

    <sub-flow name="save-status-step2" doc:name="save batch status 2">
		<os:store doc:name="Store" objectStore="Object_store" key="#[vars.view]">
			<os:value><![CDATA[#[
				output application/json
				---
				{
					step: 2,
					stepDescription: "ETL queue received message and querying watermark for validFrom filter",
					currentBatchMetadata: vars.queueMessage
				}
				]]]>
			</os:value>
		</os:store>	
    </sub-flow>

    <sub-flow name="save-status-step3" doc:name="save batch status 3">
		<os:store doc:name="Store" objectStore="Object_store" key="#[vars.view]">
			<os:value><![CDATA[#[
				output application/json
				---
				{
					step: 3,
					stepDescription: "Querying database to get expected records to process during all ETL process",
					currentBatchMetadata: vars.queueMessage
				}
				]]]>
			</os:value>
		</os:store>	
    </sub-flow>

    <sub-flow name="save-status-step4" doc:name="save batch status 4">
		<os:store doc:name="Store" objectStore="Object_store" key="#[vars.view]">
			<os:value><![CDATA[#[
				output application/json
				---
				{
					step: 4,
					stepDescription: "Querying database to get the records for the current batch",
					currentBatchMetadata: vars.queueMessage
				}
				]]]>
			</os:value>
		</os:store>	
    </sub-flow>

    <sub-flow name="save-status-step5" doc:name="save batch status 5">
		<os:store doc:name="Store" objectStore="Object_store" key="#[vars.view]">
			<os:value><![CDATA[#[
				output application/json
				---
				{
					step: 5,
					stepDescription: "Sending records to API",
					currentBatchMetadata: vars.queueMessage
				}
				]]]>
			</os:value>
		</os:store>	
    </sub-flow>

    <sub-flow name="save-status-step6" doc:name="save batch status 6">
		<os:store doc:name="Store" objectStore="Object_store" key="#[vars.view]">
			<os:value><![CDATA[#[
				output application/json
				---
				{
					step: 6,
					stepDescription: "Analyze API results and determine if batch proccesing will continue or finish with watermark update",
					currentBatchMetadata: vars.queueMessage
				}
				]]]>
			</os:value>
		</os:store>	
    </sub-flow>
</mule>