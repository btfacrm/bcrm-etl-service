<?xml version="1.0" encoding="UTF-8"?>

<mule
 	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" 
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd	
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/http 
		http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
		http://www.mulesoft.org/schema/mule/vm 
		http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
	
	<flow name="queue-disbursement">
		<vm:listener doc:name="Listener" config-ref="VM_Config" queueName="disbursement" timeout="60" timeoutUnit="MINUTES"/>
		<flow-ref name="initialize-process" doc:name="initialize process"/>

		<!-- Get validFrom Watermark -->
		<flow-ref name="query-watermark-validfrom" doc:name="get watermark data"/>

		<!-- Get the expected the number of records to process for all batches, triggered only in first batch  -->
		<choice doc:name="custom watermark dates?" >
            <when expression='#[ isEmpty(vars.customWatermarkStart) ]'>
				<set-variable doc:name="query expected records" variableName="query" 
					  value='#["SELECT count(*) total from VCrm_Disbursement WHERE ValidFrom > :validFrom" ]' />
			</when>
			<otherwise>
				<set-variable doc:name="query expected records with custom watermark" variableName="query" 
					value="#['SELECT count(*) total from VCrm_Disbursement WHERE ValidFrom between :start and :end' ]" />
			</otherwise>
		</choice>

		<flow-ref name="get-expected-records" doc:name="get expected records to process"/>

		<choice doc:name="query view?" >
            <when expression='#[ vars.expectedRecords > 0 ]'>

				<!-- Create query for view -->
				<flow-ref name="save-status-step4" doc:name="save batch status 4"/>
				<ee:transform doc:name="sql for view" >
					<ee:variables >
						<ee:set-variable variableName="query"><![CDATA[#[ %dw 2.0
							output application/json skipNullOn="everywhere"
							---
							" SELECT top " ++ vars.maxRecords as String ++
							"   RTRIM(CustomerAccountNumber) as CustomerAccountNumber, " ++
							"   RTRIM(TransactionNumber) as TransactionNumber, " ++
							"   RTRIM(TransactionCode) as TransactionCode, " ++
							"   RTRIM(Status) as Status, " ++
							"   RTRIM(TaxCode) as TaxCode, " ++
							"   RTRIM(DisbursementText) as DisbursementText,  " ++
							"   DebitCreditIndicator, Amount, SettledFlag, PrincIncomeIndicator, TaxYear, " ++
							"   FORMAT(SettleDate, 'yyyy-MM-ddTHH:mm:ss.fffZ') AS SettleDate, " ++
							"   FORMAT(EffectiveDate, 'yyyy-MM-ddTHH:mm:ss.fffZ') AS EffectiveDate " ++
							" FROM VCrm_Disbursement " ++
							" WHERE CustomerAccountNumber IN('012J000542','012J000628','012J000656','012J000691','012J000702','012J000718','012J000741','012J000786','012J000844','012J000862','012J000895','012J000996','012J001007','012J001035','012J001115','012J001181','012J001235','012J001455','012J001479','012J001715','012J001814','012J001925','012J002046','012J002095','012J002206','012J002215','012J002220','012J002226','012J002230','012J002251','012J002738','012J002884','012J003116','012J003225','012J003305','012J003306','012J003307','000X000000','001J004688','001J004693','001J004695','001J004719','001J004756','001J004819','001J004882','001J004888','000U033333','012J003309','012J003311','012J003327','012J003328','012J003329','012J003330','012J003331','012J003780','012J003801','012J003919','012J003950','012J004139','012J004140','012J004392','012J004542','012J004663','012J004674','012J004677','012J004692','012J004693','012J004701','012J004709','012J004715','012J004722','012J004769','012J004789','012J004803','012J004806','012J004813','012J004816','012J004823','012J004826','012J004833','012J004838','012J004839','012J004884','001J004889','001J004890','001J004894','001J004906','001J004910','001J004921','001J004933','001J004935','001J005129','001J005132','001J005135','001J005139','001J005147','001J005151','001J005157','012J004892','012J004913','012J004919','012J004930','012J004931','012J004937','012J004940','012J004941','012J004973','012J004986','012J005016','012J005034','012J005052','012J005064','012J005081','012J005085','012J005089','012J005101','001J005176','001J005179','001J005182','001J005185','001J005187','001J005190','001J005195','001J005314','001J005327','001J005329','001J005339','001J005406','001J005500','001J005512','001J005522','001J005542','012J005115','012J005135','012J005146','012J005282','012J005299','012J005309','012J005344','012J005353','012J005365','012J005369','012J005377','012J005381','012J005396','012J005406','012J005414','012J005458','012J005525','012J005555','012J005604','001J005545','001J005663','001J005759','001J005866','001J006038','001J006113','001J006122','001J006127','001J006150','001J006161','001J006351','001J006352','001J006356','012J005648','012J005678','012J005679','012J005692','012J005749','012J094912','012L003314','012N003302','012N003340','012N003341','012N003342','012N003343','012N003344','012N003345','012N003346','012N003347','012N003418','012N003423','001J006359','001J006376','001J006405','001J006664','001L002384','001L013221','001N000101','001N000104','001N000105','001N000106','001N000107','001N000108','001N008515','001N008516','001N008517','001R005106','001R012602','012N003424','012N003428','012N003446','012N003447','012N003448','012N003449','012N003450','012N003464','012N003465','012N003466','012N003467','012N003482','012N003500','012N003501','012N003514','012N005831','012N048271','012N048282','012N048283','001R017951','001T001050','001T001055','001U000258','001U000260','001U000261','001U000262','001U000444','001U000861','001U001037','001U002103','001U002384','001U002658','001U003131','001U003507','012T012050','012U000651','012U000652','012U003222','012U003223','012U003241','012U003304','012U003310','012U003314','012U003315','012U003316','012U003317','012U003320','012U003325','012U003336','012U003364','012U003366','012U003367','012N048284','001U003919','001U003920','001U003987','001U004038','001U004126','001U004638','001U005075','012U003380','012U003382','012U003383','012U003384','012U003389','012U003399','012U003400','012U003401','012U003422','012U003431','012U003432','012U003433','012U003436','012U003437','012U003441','012U003442','012U003445','012U003452','012U003454','012U003458','001U006024','001U006030','001U006052','001U006228','001U006230','001U006231','001U006781','001U008227','001U008380','001U005698','012U003459','012U003477','012U003495','012U003515','012U003525','012U003526','012U004031','012U004409','012U008001','012U008002','012U011667','012U048264','012U265510','012U337210','012U538210','012U538230','012X000001','012X000002','012X002443','001U008838','001U009535','001U009645','001U010100','001U010102','001U010345','001U010582','001U010586','001U010853','001U011892','001U012091','001U012092','001U012384','012X003250','012X003372','012X003376','012X003377','012X003415','012X003419','012X003421','012X003426','001U012602','001U013221','001U013222','001U013315','001U014139','001U014886','001U015720','001U016297','001U017951','001U070201','001U207562','001U210115','001X003425','004L003717','004L014501','004N000101','004U000102','004U000103','004U000104','004U003380','004U003717','004U004488','004U014501','004U482610','004U482620','004U482640','005T005050','005U002189','005U002190','005U002191','006U001002','007A000034','007L007693','007T007050','007U000103','007U000104','007U011260','008N005025','008N005026','008N005027','008N055445','008N055446','008N055447','008N055451','008N055455','008N556001','008U005022','008U005023','008U055441','008U055442','008U055443','008U291178','008U556010','011T011050','011U000024','011U000025','011U000026','011U000027','012J000415','012J000449','008T008050','`930N015993')"
						]]]>
						</ee:set-variable>
						<!-- " WHERE EffectiveDate > :validFrom "  -->
					</ee:variables>
				</ee:transform>

				<flow-ref name="mssql-main-query" doc:name="query main db"/>
			</when>
			<otherwise>
				<!-- There is no data to process, initializing varialbes for next steps-->
				<set-variable doc:name="initialized processed records" variableName="recordsProcessed" value="#[0]"/>
				<set-variable doc:name="set httpStatus" variableName="httpStatus" value='#[200]'  />
			</otherwise>
		</choice>


		<choice doc:name="create API payload?" >
            <when expression='#[ vars.recordsProcessed > 0 ]'>

				<flow-ref name="save-status-step5" doc:name="save batch status 5"/>

				<ee:transform doc:name="api payload" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
							output application/json skipNullOn="everywhere"
							---
							payload map (item, value) ->{
								account: 				item.CustomerAccountNumber as String,
								transaction: 			item.TransactionNumber,
								code: 					item.TransactionCode,
								disbursementText: 		item.DisbursementText,
								debitCreditIndicator: 	item.DebitCreditIndicator,
								amount: 				item.Amount as Number,
								settleDate: 			item.SettleDate,
								status: 				item.Status,
								settleFlag: 			if (item.SettledFlag != 0) true else false,
								incomeIndicator: 		item.PrincIncomeIndicator,
								taxCode: 				item.TaxCode,
								taxYear: 				item.TaxYear,
								date: 					item.EffectiveDate
							}
							]]>
						</ee:set-payload>
					</ee:message>
				</ee:transform>

				<flow-ref name="call-api" doc:name="call api"/>
            </when>
        </choice>

		<!-- Analyze results and post message to the response queue -->
		<flow-ref name="publish-message" doc:name="analyze and route message"/>

        <error-handler ref="global-error-handler" />
	</flow>
</mule>